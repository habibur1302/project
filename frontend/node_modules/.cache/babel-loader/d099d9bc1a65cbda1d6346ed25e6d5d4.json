{"remainingRequest":"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/babel-loader/lib/index.js!/Users/habiburrahmanriad/Sites/project/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/habiburrahmanriad/Sites/project/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/habiburrahmanriad/Sites/project/frontend/src/views/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/habiburrahmanriad/Sites/project/frontend/src/views/auth/Login.vue","mtime":1567943753000},{"path":"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/habiburrahmanriad/Sites/project/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Form, HasError } from 'vform';\nimport Card from '@/components/Card';\nexport default {\n  middleware: 'guest',\n  components: {\n    Card: Card,\n    HasError: HasError\n  },\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('login')\n    };\n  },\n  data: function data() {\n    return {\n      form: new Form({\n        email: '',\n        password: ''\n      })\n    };\n  },\n  methods: {\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.dispatch('auth/login', {\n                  form: this.form\n                });\n\n              case 2:\n                this.$router.push({\n                  name: 'home'\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login() {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAAA,IAAA,EAAA,QAAA,QAAA,OAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA,OADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAHA;AAQA,EAAA,QARA,sBAQA;AACA,WAAA;AAAA,MAAA,KAAA,EAAA,KAAA,EAAA,CAAA,OAAA;AAAA,KAAA;AACA,GAVA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA;AADA,KAAA;AAMA,GAnBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AAAA,kBAAA,IAAA,EAAA,KAAA;AAAA,iBAAA,CAHA;;AAAA;AAMA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArBA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-lg-8 m-auto\">\n      <card :title=\"$t('login')\">\n        <form @submit.prevent=\"login\" @keydown=\"form.onKeydown($event)\">\n          <!-- Email -->\n          <div class=\"form-group row\">\n            <label for=\"email\" class=\"col-md-3 col-form-label text-md-right\">{{ $t('email') }}</label>\n            <div class=\"col-md-7\">\n              <input v-model=\"form.email\" id=\"email\" :class=\"{ 'is-invalid': form.errors.has('email') }\" class=\"form-control\" type=\"email\" name=\"email\">\n              <has-error :form=\"form\" field=\"email\" />\n            </div>\n          </div>\n\n          <!-- Password -->\n          <div class=\"form-group row\">\n            <label for=\"password\" class=\"col-md-3 col-form-label text-md-right\">{{ $t('password') }}</label>\n            <div class=\"col-md-7\">\n              <input v-model=\"form.password\" id=\"password\" :class=\"{ 'is-invalid': form.errors.has('password') }\" class=\"form-control\" type=\"password\" name=\"password\">\n              <has-error :form=\"form\" field=\"password\" />\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <div class=\"col-md-7 offset-md-3 d-flex\">\n              <!-- Submit Button -->\n              <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"form.busy\">\n                {{ $t('login') }}\n              </button>\n            </div>\n          </div>\n        </form>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Form, HasError } from 'vform'\nimport Card from '@/components/Card'\n\nexport default {\n  middleware: 'guest',\n\n  components: {\n    Card,\n    HasError\n  },\n\n  metaInfo () {\n    return { title: this.$t('login') }\n  },\n\n  data () {\n    return {\n      form: new Form({\n        email: '',\n        password: ''\n      })\n    }\n  },\n\n  methods: {\n    async login () {\n      // Submit the form.\n      await this.$store.dispatch('auth/login', { form: this.form })\n\n      // Redirect home.\n      this.$router.push({ name: 'home' })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/auth"}]}