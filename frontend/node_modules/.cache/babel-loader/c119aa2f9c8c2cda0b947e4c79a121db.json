{"remainingRequest":"/Users/habiburrahmanriad/Sites/frontend/node_modules/babel-loader/lib/index.js!/Users/habiburrahmanriad/Sites/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/habiburrahmanriad/Sites/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/habiburrahmanriad/Sites/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/habiburrahmanriad/Sites/frontend/src/App.vue","mtime":1567943753000},{"path":"/Users/habiburrahmanriad/Sites/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/habiburrahmanriad/Sites/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Loading from '@/components/Loading';\nimport { APP_NAME } from '@/config'; // Load layout components dynamically.\n\nvar requireContext = require.context('@/layouts', false, /.*\\.vue$/);\n\nvar layouts = requireContext.keys().map(function (file) {\n  return [file.replace(/(^.\\/)|(\\.vue$)/g, ''), requireContext(file)];\n}).reduce(function (components, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      component = _ref2[1];\n\n  components[name] = component.default || component;\n  return components;\n}, {});\nexport default {\n  el: '#app',\n  components: {\n    Loading: Loading\n  },\n  metaInfo: function metaInfo() {\n    return {\n      title: APP_NAME,\n      titleTemplate: \"%s \\xB7 \".concat(APP_NAME)\n    };\n  },\n  mounted: function mounted() {\n    this.$loading = this.$refs.loading;\n  },\n  data: function data() {\n    return {\n      layout: null,\n      defaultLayout: 'default'\n    };\n  },\n  methods: {\n    /**\n     * Set the application layout.\n     *\n     * @param {String} layout\n     */\n    setLayout: function setLayout(layout) {\n      if (!layout || !layouts[layout]) {\n        layout = this.defaultLayout;\n      }\n\n      this.layout = layouts[layout];\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,OAAA,OAAA,MAAA,sBAAA;AACA,SAAA,QAAA,QAAA,UAAA,C,CAEA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,OAAA,CAAA,WAAA,EAAA,KAAA,EAAA,UAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,cAAA,CAAA,IAAA,GACA,GADA,CACA,UAAA,IAAA;AAAA,SACA,CAAA,IAAA,CAAA,OAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,EAAA,cAAA,CAAA,IAAA,CAAA,CADA;AAAA,CADA,EAIA,MAJA,CAIA,UAAA,UAAA,QAAA;AAAA;AAAA,MAAA,IAAA;AAAA,MAAA,SAAA;;AACA,EAAA,UAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,OAAA,IAAA,SAAA;AACA,SAAA,UAAA;AACA,CAPA,EAOA,EAPA,CAAA;AASA,eAAA;AACA,EAAA,EAAA,EAAA,MADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAHA;AAOA,EAAA,QAPA,sBAOA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,QADA;AAEA,MAAA,aAAA,oBAAA,QAAA;AAFA,KAAA;AAIA,GAZA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,QAAA,GAAA,KAAA,KAAA,CAAA,OAAA;AACA,GAhBA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GAvBA;AAyBA,EAAA,OAAA,EAAA;AACA;;;;;AAKA,IAAA,SANA,qBAMA,MANA,EAMA;AACA,UAAA,CAAA,MAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,KAAA,aAAA;AACA;;AAEA,WAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;AACA;AAZA;AAzBA,CAAA","sourcesContent":["<template>\n  <div>\n    <loading ref=\"loading\" />\n\n    <transition name=\"page\" mode=\"out-in\">\n      <component :is=\"layout\" v-if=\"layout\" />\n    </transition>\n  </div>\n</template>\n\n<script>\nimport Loading from '@/components/Loading'\nimport { APP_NAME } from '@/config'\n\n// Load layout components dynamically.\nconst requireContext = require.context('@/layouts', false, /.*\\.vue$/)\n\nconst layouts = requireContext.keys()\n  .map(file =>\n    [file.replace(/(^.\\/)|(\\.vue$)/g, ''), requireContext(file)]\n  )\n  .reduce((components, [name, component]) => {\n    components[name] = component.default || component\n    return components\n  }, {})\n\nexport default {\n  el: '#app',\n\n  components: {\n    Loading\n  },\n\n  metaInfo () {\n    return {\n      title: APP_NAME,\n      titleTemplate: `%s Â· ${APP_NAME}`\n    }\n  },\n\n  mounted () {\n    this.$loading = this.$refs.loading\n  },\n\n  data () {\n    return {\n      layout: null,\n      defaultLayout: 'default'\n    }\n  },\n\n  methods: {\n    /**\n     * Set the application layout.\n     *\n     * @param {String} layout\n     */\n    setLayout (layout) {\n      if (!layout || !layouts[layout]) {\n        layout = this.defaultLayout\n      }\n\n      this.layout = layouts[layout]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './styles/app.scss';\n</style>\n"],"sourceRoot":"src"}]}