{"remainingRequest":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/babel-loader/lib/index.js!/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/habiburrahmanriad/Sites/laravel6-frontend/src/views/account/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/src/views/account/Profile.vue","mtime":1567943753000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Form, HasError, AlertSuccess } from 'vform';\nimport Card from '@/components/Card';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    Card: Card,\n    HasError: HasError,\n    AlertSuccess: AlertSuccess\n  },\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('your_info')\n    };\n  },\n  data: function data() {\n    return {\n      form: new Form({\n        name: '',\n        email: ''\n      })\n    };\n  },\n  computed: mapGetters({\n    user: 'auth/user'\n  }),\n  created: function created() {\n    var _this = this;\n\n    // Fill the form with user data.\n    this.form.keys().forEach(function (key) {\n      _this.form[key] = _this.user[key];\n    });\n  },\n  methods: {\n    update: function () {\n      var _update = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.form.patch('/api/account/profile');\n\n              case 2:\n                _ref = _context.sent;\n                data = _ref.data.data;\n                this.$store.dispatch('auth/updateUser', {\n                  user: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }\n};",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,IAAA,EAAA,QAAA,EAAA,YAAA,QAAA,OAAA;AACA,OAAA,IAAA,MAAA,mBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GADA;AAOA,EAAA,QAPA,sBAOA;AACA,WAAA;AAAA,MAAA,KAAA,EAAA,KAAA,EAAA,CAAA,WAAA;AAAA,KAAA;AACA,GATA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AADA,KAAA;AAMA,GAlBA;AAoBA,EAAA,QAAA,EAAA,UAAA,CAAA;AACA,IAAA,IAAA,EAAA;AADA,GAAA,CApBA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AACA;AACA,SAAA,IAAA,CAAA,IAAA,GAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAFA;AAGA,GA7BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,QAEA,IAFA,CAEA,IAFA;AAIA,qBAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/BA,CAAA","sourcesContent":["<template>\n  <card :title=\"$t('your_info')\">\n    <form @submit.prevent=\"update\" @keydown=\"form.onKeydown($event)\">\n      <alert-success :form=\"form\" :message=\"$t('info_updated')\" />\n\n      <!-- Name -->\n      <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-md-3 col-form-label text-md-right\">{{ $t('name') }}</label>\n        <div class=\"col-md-7\">\n          <input v-model=\"form.name\" id=\"name\" :class=\"{ 'is-invalid': form.errors.has('name') }\" class=\"form-control\" type=\"text\" name=\"name\">\n          <has-error :form=\"form\" field=\"name\" />\n        </div>\n      </div>\n\n      <!-- Email -->\n      <div class=\"form-group row\">\n        <label for=\"email\" class=\"col-md-3 col-form-label text-md-right\">{{ $t('email') }}</label>\n        <div class=\"col-md-7\">\n          <input v-model=\"form.email\" id=\"email\" :class=\"{ 'is-invalid': form.errors.has('email') }\" class=\"form-control\" type=\"email\" name=\"email\">\n          <has-error :form=\"form\" field=\"email\" />\n        </div>\n      </div>\n\n      <!-- Submit Button -->\n      <div class=\"form-group row\">\n        <div class=\"col-md-9 ml-md-auto\">\n          <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"form.busy\">\n            {{ $t('update') }}\n          </button>\n        </div>\n      </div>\n    </form>\n  </card>\n</template>\n\n<script>\nimport { Form, HasError, AlertSuccess } from 'vform'\nimport Card from '@/components/Card'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  components: {\n    Card,\n    HasError,\n    AlertSuccess\n  },\n\n  metaInfo () {\n    return { title: this.$t('your_info') }\n  },\n\n  data () {\n    return {\n      form: new Form({\n        name: '',\n        email: ''\n      })\n    }\n  },\n\n  computed: mapGetters({\n    user: 'auth/user'\n  }),\n\n  created () {\n    // Fill the form with user data.\n    this.form.keys().forEach(key => {\n      this.form[key] = this.user[key]\n    })\n  },\n\n  methods: {\n    async update () {\n      const { data: { data } } = await this.form.patch('/api/account/profile')\n\n      this.$store.dispatch('auth/updateUser', { user: data })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/account"}]}