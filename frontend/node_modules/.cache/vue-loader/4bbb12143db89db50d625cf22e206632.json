{"remainingRequest":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/habiburrahmanriad/Sites/laravel6-frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/src/App.vue","mtime":1567943753000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/habiburrahmanriad/Sites/laravel6-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Loading from '@/components/Loading'\nimport { APP_NAME } from '@/config'\n\n// Load layout components dynamically.\nconst requireContext = require.context('@/layouts', false, /.*\\.vue$/)\n\nconst layouts = requireContext.keys()\n  .map(file =>\n    [file.replace(/(^.\\/)|(\\.vue$)/g, ''), requireContext(file)]\n  )\n  .reduce((components, [name, component]) => {\n    components[name] = component.default || component\n    return components\n  }, {})\n\nexport default {\n  el: '#app',\n\n  components: {\n    Loading\n  },\n\n  metaInfo () {\n    return {\n      title: APP_NAME,\n      titleTemplate: `%s · ${APP_NAME}`\n    }\n  },\n\n  mounted () {\n    this.$loading = this.$refs.loading\n  },\n\n  data () {\n    return {\n      layout: null,\n      defaultLayout: 'default'\n    }\n  },\n\n  methods: {\n    /**\n     * Set the application layout.\n     *\n     * @param {String} layout\n     */\n    setLayout (layout) {\n      if (!layout || !layouts[layout]) {\n        layout = this.defaultLayout\n      }\n\n      this.layout = layouts[layout]\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <loading ref=\"loading\" />\n\n    <transition name=\"page\" mode=\"out-in\">\n      <component :is=\"layout\" v-if=\"layout\" />\n    </transition>\n  </div>\n</template>\n\n<script>\nimport Loading from '@/components/Loading'\nimport { APP_NAME } from '@/config'\n\n// Load layout components dynamically.\nconst requireContext = require.context('@/layouts', false, /.*\\.vue$/)\n\nconst layouts = requireContext.keys()\n  .map(file =>\n    [file.replace(/(^.\\/)|(\\.vue$)/g, ''), requireContext(file)]\n  )\n  .reduce((components, [name, component]) => {\n    components[name] = component.default || component\n    return components\n  }, {})\n\nexport default {\n  el: '#app',\n\n  components: {\n    Loading\n  },\n\n  metaInfo () {\n    return {\n      title: APP_NAME,\n      titleTemplate: `%s · ${APP_NAME}`\n    }\n  },\n\n  mounted () {\n    this.$loading = this.$refs.loading\n  },\n\n  data () {\n    return {\n      layout: null,\n      defaultLayout: 'default'\n    }\n  },\n\n  methods: {\n    /**\n     * Set the application layout.\n     *\n     * @param {String} layout\n     */\n    setLayout (layout) {\n      if (!layout || !layouts[layout]) {\n        layout = this.defaultLayout\n      }\n\n      this.layout = layouts[layout]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './styles/app.scss';\n</style>\n"]}]}